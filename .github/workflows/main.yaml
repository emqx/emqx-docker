name: GitHub CI

on:
  pull_request:
  push:
  schedule:
    - cron: 0 0 * * 0

defaults:
  run:
    shell: 'bash -Eeuo pipefail {0}'

jobs:
  main:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        version:
          - 4.3
          - 4.4
        os:
          - debian
          - alpine
        exclude:
          - version: 4.3
            os: alpine

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Get metadata
        id: metadata
        run: |
          if [ "${{ matrix.version }}" == "4.3" ]; then
            echo "::set-output name=platform::linux/amd64"
          else
            echo "::set-output name=platform::linux/amd64,linux/arm64"
          fi
          if [ "${{ matrix.os }}" == "alpine" ]; then
            echo "::set-output name=dockerfile::Dockerfile.alpine"
            echo "::set-output name=tag::${{ matrix.version }}-alpine"
          else
            echo "::set-output name=dockerfile::Dockerfile"
            echo "::set-output name=tag::${{ matrix.version }}"
          fi
      - uses: docker/build-push-action@v2
        with:
          push: true
          pull: true
          no-cache: true
          platforms: ${{ steps.metadata.outputs.platform }}
          tags: ghcr.io/${{ github.repository }}:${{ steps.metadata.outputs.tag }}
          file: ${{ matrix.version }}/${{ steps.metadata.outputs.dockerfile }}
          context: ${{ matrix.version }}
      - name: Check image
        timeout-minutes: 1
        run: |
          docker run -d -p 8081:8081 --name emqx ghcr.io/${{ github.repository }}:${{ steps.metadata.outputs.tag }}
          while ! curl -fs 127.0.0.1:8081/status > /dev/null; do
            echo "waiting for emqx"
            sleep 1
          done
          if ! docker exec -i emqx emqx ping; then
            echo "emqx command not working"
            exit 1
          fi
          if ! docker exec -i emqx emqx_ctl status; then
            echo "emqx_ctl command not working"
            exit 1
          fi
          echo "================================================================"
          echo "emqx is running"
